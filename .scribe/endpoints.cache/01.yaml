## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"The Manager","email":"manager@manager.com","email_verified_at":null,"is_manager":true,"created_at":"2025-01-18T18:46:13.000000Z","updated_at":"2025-01-18T18:46:13.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":1,"attributes":{"title":"First Ticket v2","description":"Molestiae est placeat aliquid. Nulla omnis accusantium aut. Quaerat est eaque quibusdam molestias earum voluptatem. Velit quisquam rerum ab repellat autem autem et.","status":"X","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:52:02.000000Z"},"relationships":{"author":{"data":{"type":"user","id":6},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}}},"links":{"self":"http:\/\/localhost\/api\/v1\/tickets\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Non laudantium nihil asperiores vitae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: H
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: voluptates
          description: 'Non laudantium nihil asperiores vitae.'
          status: H
        relationships:
          author:
            data:
              id: 19
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Dr. Alden Zboncak","email":"waelchi.margarete@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}},{"type":"user","id":2,"attributes":{"name":"Brittany Stoltenberg","email":"cory22@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}},{"type":"user","id":3,"attributes":{"name":"Kayden Pagac","email":"ledner.dawson@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Russell Mraz","email":"roselyn.larson@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},{"type":"user","id":5,"attributes":{"name":"Brenna Bernier II","email":"zoe87@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}},{"type":"user","id":6,"attributes":{"name":"Felicita Schimmel","email":"tate86@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}},{"type":"user","id":7,"attributes":{"name":"Manuela Lubowitz III","email":"hirthe.berneice@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}},{"type":"user","id":8,"attributes":{"name":"Geraldine Muller","email":"xschroeder@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/8"}},{"type":"user","id":9,"attributes":{"name":"Damien Barton","email":"jordane89@example.net","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}},{"type":"user","id":10,"attributes":{"name":"Dr. Bill Hammes","email":"bernardo.koepp@example.org","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}},{"type":"user","id":11,"attributes":{"name":"The Manager","email":"manager@manager.com","isManager":true},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/11"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/users?page=1","last":"http:\/\/localhost\/api\/v1\/users?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/users?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/users","per_page":15,"to":11,"total":11}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: purdy.ebony@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: '&EE=?fw='
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: expedita
          email: purdy.ebony@example.org
          isManager: false
          password: '&EE=?fw='
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Dr. Alden Zboncak","email":"waelchi.margarete@example.com","isManager":false},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: true
        example: hilton.anderson@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: true
        example: 'Tv&aS+*:^QJ!_7<OA!'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: rerum
          email: hilton.anderson@example.com
          isManager: true
          password: 'Tv&aS+*:^QJ!_7<OA!'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.name:
        name: data.attributes.name
        description: ''
        required: false
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.email:
        name: data.attributes.email
        description: 'Must be a valid email address.'
        required: false
        example: isawayn@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.isManager:
        name: data.attributes.isManager
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.password:
        name: data.attributes.password
        description: ''
        required: false
        example: '!LzN[g/N|Z,h5k@Hq(;a'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          name: harum
          email: isawayn@example.net
          isManager: false
          password: '!LzN[g/N|Z,h5k@Hq(;a'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/authors
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"user","id":1,"attributes":{"name":"Dr. Alden Zboncak","email":"waelchi.margarete@example.com","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}},{"type":"user","id":2,"attributes":{"name":"Brittany Stoltenberg","email":"cory22@example.net","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/2"}},{"type":"user","id":3,"attributes":{"name":"Kayden Pagac","email":"ledner.dawson@example.net","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/3"}},{"type":"user","id":4,"attributes":{"name":"Russell Mraz","email":"roselyn.larson@example.com","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/4"}},{"type":"user","id":5,"attributes":{"name":"Brenna Bernier II","email":"zoe87@example.com","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/5"}},{"type":"user","id":6,"attributes":{"name":"Felicita Schimmel","email":"tate86@example.net","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/6"}},{"type":"user","id":7,"attributes":{"name":"Manuela Lubowitz III","email":"hirthe.berneice@example.net","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/7"}},{"type":"user","id":8,"attributes":{"name":"Geraldine Muller","email":"xschroeder@example.com","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/8"}},{"type":"user","id":9,"attributes":{"name":"Damien Barton","email":"jordane89@example.net","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/9"}},{"type":"user","id":10,"attributes":{"name":"Dr. Bill Hammes","email":"bernardo.koepp@example.org","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/10"}}],"links":{"first":"http:\/\/localhost\/api\/v1\/authors?page=1","last":"http:\/\/localhost\/api\/v1\/authors?page=7","prev":null,"next":"http:\/\/localhost\/api\/v1\/authors?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=1","label":"1","active":true},{"url":"http:\/\/localhost\/api\/v1\/authors?page=2","label":"2","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=3","label":"3","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=4","label":"4","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=5","label":"5","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=6","label":"6","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=7","label":"7","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/authors","per_page":15,"to":10,"total":102}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"user","id":1,"attributes":{"name":"Dr. Alden Zboncak","email":"waelchi.margarete@example.com","isManager":false,"emailVerifiedAt":"2025-01-18T18:46:12.000000Z","createdAt":"2025-01-18T18:46:12.000000Z","updatedAt":"2025-01-18T18:46:12.000000Z"},"links":{"self":"http:\/\/localhost\/api\/v1\/authors\/1"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: illum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/authors\/illum\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/authors\/illum\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors\/illum\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/authors\/illum\/tickets","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: minima
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: 'The tickets title (method).'
        required: true
        example: "No-example'"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: 'The tickets description (method).'
        required: true
        example: "No-example'"
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: 'The tickets status (method).'
        required: true
        example: "No-example'"
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      author:
        name: author
        description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table. The <code>id</code> of an existing record in the users table. Must be . Must be 11required. Must be .'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: "No-example'"
          description: "No-example'"
          status: "No-example'"
      author: 0
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{author_id}/tickets/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: placeat
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/authors/{author}/tickets/{ticket}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author: quia
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Eveniet qui officia blanditiis excepturi dicta ut rerum quia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: X
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: et
          description: 'Eveniet qui officia blanditiis excepturi dicta ut rerum quia.'
          status: X
        relationships:
          author:
            data:
              id: 6
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"name":"The Manager","email":"manager@manager.com","email_verified_at":null,"is_manager":true,"created_at":"2025-01-18T18:46:13.000000Z","updated_at":"2025-01-18T18:46:13.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6|5y6jEoul590haOn3TKMphGBA6ZOQa5FO1DFFs2Sy20d85349'
    controller: null
    method: null
    route: null
    custom: []
